@model List<KanbanBoard.Application.Dtos.StatusDtos.GetStatusDto>


    <style>
        .portlet-placeholder {
            border: 1px dotted black;
            margin: 0 1em 1em 0;
            height: 50px;
        }

    </style>

<link rel="stylesheet" href="//code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css">

<div class="row mt-3">
    <div class="display-6">Board / @ViewData["boardTitle"]</div>
</div>
<hr />



<div class="row d-flex mt-5 text-center" style="height: 600px;">
    @foreach (var status in Model)
    {
        <div class="col connectedSortable sortable" id="@status.Id">
            @status.Name
            @foreach (var issue in status.Issues)
            {
                <div class="card mt-2 portlet" id="@issue.Id">
                    <div class="card-body">
                        <h5 class="card-title">@issue.Summary</h5>
                        <p class="card-text">@issue.Description</p>
                    </div>
                </div>
            }
        </div>
    }
</div>


@section Scripts{

    <script src="https://code.jquery.com/ui/1.13.2/jquery-ui.js"></script>

    <script>

         $(document).ready(() => {

             let oldOrder;


            $(".sortable").sortable({
                connectWith: ".connectedSortable",
                opacity: 0.5,
                scroll: false,
                //revert: true,
                //dropOnEmpty: true,
                cancel: ".portlet-toggle",
                placeholder: "portlet-placeholder ui-corner-all",
                start: function (event, ui) {
                    oldOrder = ui.item.index()
                },
                stop: function (event, ui) {

                    var issueId = ui.item.attr("id");
                    console.log("issue: " + issueId);

                    var newStatusId = ui.item.parent().attr("id");
                    console.log("status: " + newStatusId);

                    console.log("Old Order: " + oldOrder);


                    var newOrder = ui.item.index();
                    console.log("New Order:" + newOrder);


                    // Görev veritabanında güncellenir (Ajax post ile)

                    let obj = {
                        issueId: issueId,
                        statusId: newStatusId,
                        oldOrder: oldOrder,
                        newOrder: newOrder
                    };

                    $.ajax({
                        url: "/Issue/UpdateIssue",
                        type: "POST",
                        dataType: "json",
                        contentType:"application/x-www-form-urlencoded; charset=utf-8",
                        data: {
                            __RequestVerificationToken: getToken(),
                            updateIssue: obj
                        },
                        success: function (res) {
                            console.log(res);
                        }

                    });

                }

            }).disableSelection();

             $(".portlet")
                 .addClass(
                     "ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"
                 )
                 .find(".portlet-header")
                 .addClass("ui-widget-header ui-corner-all")
                 .prepend(
                     "<span class='ui-icon ui-icon-minusthick portlet-toggle'></span>"
                 );

         });



        function getToken() {
            let token = '@Html.AntiForgeryToken()';
            token = $(token).val();
            return token;
        }



    </script>
}
